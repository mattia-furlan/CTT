-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParCTT.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pTerm -> Term                               (1)
	%start_pToplevel -> Toplevel                       (2)
	Ident -> L_Ident                                   (3)
	Program -> ListToplevel                            (4)
	Term -> Term1                                      (5)
	Term -> Term1 '->' Term                            (6)
	Term -> '[' Ident ':' Term ']' Term                (7)
	Term1 -> Term2                                     (8)
	Term1 -> Term1 Term2                               (9)
	Term2 -> Term3                                     (10)
	Term2 -> Ident                                     (11)
	Term2 -> 'U'                                       (12)
	Term2 -> 'N'                                       (13)
	Term2 -> '0'                                       (14)
	Term2 -> 'S' Term2                                 (15)
	Term2 -> 'ind' Term2 Term2 Term2 Term2             (16)
	Term3 -> '(' Term ')'                              (17)
	Toplevel -> Ident ':' Term '=' Term                (18)
	Toplevel -> Term                                   (19)
	ListToplevel ->                                    (20)
	ListToplevel -> Toplevel ';' ListToplevel          (21)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'->'           { PT _ (TS _ 3) }
	'0'            { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'N'            { PT _ (TS _ 8) }
	'S'            { PT _ (TS _ 9) }
	'U'            { PT _ (TS _ 10) }
	'['            { PT _ (TS _ 11) }
	']'            { PT _ (TS _ 12) }
	'ind'          { PT _ (TS _ 13) }
	L_Ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pTerm    rule  1
	%start_pToplevel rule  2
	Ident           rule  3
	Program         rule  4
	Term            rules 5, 6, 7
	Term1           rules 8, 9
	Term2           rules 10, 11, 12, 13, 14, 15, 16
	Term3           rule  17
	Toplevel        rules 18, 19
	ListToplevel    rules 20, 21

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4
	%eof           reduce using rule 20

	Ident          goto state 5
	Program        goto state 20
	Term           goto state 6
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9
	Toplevel       goto state 21
	ListToplevel   goto state 22

State 1

	%start_pTerm -> . Term                              (rule 1)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 19
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 2

	%start_pToplevel -> . Toplevel                      (rule 2)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 5
	Term           goto state 6
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9
	Toplevel       goto state 10

State 3

	Ident -> . L_Ident                                  (rule 3)

	L_Ident        shift, and enter state 4


State 4

	Ident -> L_Ident .                                  (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'->'           reduce using rule 3
	'0'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	'N'            reduce using rule 3
	'S'            reduce using rule 3
	'U'            reduce using rule 3
	']'            reduce using rule 3
	'ind'          reduce using rule 3
	L_Ident        reduce using rule 3
	%eof           reduce using rule 3


State 5

	Term2 -> Ident .                                    (rule 11)
	Toplevel -> Ident . ':' Term '=' Term               (rule 18)

	'('            reduce using rule 11
	'->'           reduce using rule 11
	'0'            reduce using rule 11
	':'            shift, and enter state 30
	';'            reduce using rule 11
	'N'            reduce using rule 11
	'S'            reduce using rule 11
	'U'            reduce using rule 11
	'ind'          reduce using rule 11
	L_Ident        reduce using rule 11
	%eof           reduce using rule 11


State 6

	Toplevel -> Term .                                  (rule 19)

	';'            reduce using rule 19
	%eof           reduce using rule 19


State 7

	Term -> Term1 .                                     (rule 5)
	Term -> Term1 . '->' Term                           (rule 6)
	Term1 -> Term1 . Term2                              (rule 9)

	'('            shift, and enter state 11
	')'            reduce using rule 5
	'->'           shift, and enter state 29
	'0'            shift, and enter state 12
	';'            reduce using rule 5
	'='            reduce using rule 5
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	']'            reduce using rule 5
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4
	%eof           reduce using rule 5

	Ident          goto state 18
	Term2          goto state 28
	Term3          goto state 9

State 8

	Term1 -> Term2 .                                    (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'->'           reduce using rule 8
	'0'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'N'            reduce using rule 8
	'S'            reduce using rule 8
	'U'            reduce using rule 8
	']'            reduce using rule 8
	'ind'          reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 9

	Term2 -> Term3 .                                    (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	'->'           reduce using rule 10
	'0'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	'N'            reduce using rule 10
	'S'            reduce using rule 10
	'U'            reduce using rule 10
	']'            reduce using rule 10
	'ind'          reduce using rule 10
	L_Ident        reduce using rule 10
	%eof           reduce using rule 10


State 10

	%start_pToplevel -> Toplevel .                      (rule 2)

	%eof           accept


State 11

	Term3 -> '(' . Term ')'                             (rule 17)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 27
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 12

	Term2 -> '0' .                                      (rule 14)

	'('            reduce using rule 14
	')'            reduce using rule 14
	'->'           reduce using rule 14
	'0'            reduce using rule 14
	';'            reduce using rule 14
	'='            reduce using rule 14
	'N'            reduce using rule 14
	'S'            reduce using rule 14
	'U'            reduce using rule 14
	']'            reduce using rule 14
	'ind'          reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 13

	Term2 -> 'N' .                                      (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	'->'           reduce using rule 13
	'0'            reduce using rule 13
	';'            reduce using rule 13
	'='            reduce using rule 13
	'N'            reduce using rule 13
	'S'            reduce using rule 13
	'U'            reduce using rule 13
	']'            reduce using rule 13
	'ind'          reduce using rule 13
	L_Ident        reduce using rule 13
	%eof           reduce using rule 13


State 14

	Term2 -> 'S' . Term2                                (rule 15)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term2          goto state 26
	Term3          goto state 9

State 15

	Term2 -> 'U' .                                      (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	'->'           reduce using rule 12
	'0'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	'N'            reduce using rule 12
	'S'            reduce using rule 12
	'U'            reduce using rule 12
	']'            reduce using rule 12
	'ind'          reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 16

	Term -> '[' . Ident ':' Term ']' Term               (rule 7)

	L_Ident        shift, and enter state 4

	Ident          goto state 25

State 17

	Term2 -> 'ind' . Term2 Term2 Term2 Term2            (rule 16)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term2          goto state 24
	Term3          goto state 9

State 18

	Term2 -> Ident .                                    (rule 11)

	'('            reduce using rule 11
	')'            reduce using rule 11
	'->'           reduce using rule 11
	'0'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	'N'            reduce using rule 11
	'S'            reduce using rule 11
	'U'            reduce using rule 11
	']'            reduce using rule 11
	'ind'          reduce using rule 11
	L_Ident        reduce using rule 11
	%eof           reduce using rule 11


State 19

	%start_pTerm -> Term .                              (rule 1)

	%eof           accept


State 20

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 21

	ListToplevel -> Toplevel . ';' ListToplevel         (rule 21)

	';'            shift, and enter state 23


State 22

	Program -> ListToplevel .                           (rule 4)

	%eof           reduce using rule 4


State 23

	ListToplevel -> Toplevel ';' . ListToplevel         (rule 21)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4
	%eof           reduce using rule 20

	Ident          goto state 5
	Term           goto state 6
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9
	Toplevel       goto state 21
	ListToplevel   goto state 36

State 24

	Term2 -> 'ind' Term2 . Term2 Term2 Term2            (rule 16)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term2          goto state 35
	Term3          goto state 9

State 25

	Term -> '[' Ident . ':' Term ']' Term               (rule 7)

	':'            shift, and enter state 34


State 26

	Term2 -> 'S' Term2 .                                (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	'->'           reduce using rule 15
	'0'            reduce using rule 15
	';'            reduce using rule 15
	'='            reduce using rule 15
	'N'            reduce using rule 15
	'S'            reduce using rule 15
	'U'            reduce using rule 15
	']'            reduce using rule 15
	'ind'          reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 27

	Term3 -> '(' Term . ')'                             (rule 17)

	')'            shift, and enter state 33


State 28

	Term1 -> Term1 Term2 .                              (rule 9)

	'('            reduce using rule 9
	')'            reduce using rule 9
	'->'           reduce using rule 9
	'0'            reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	'N'            reduce using rule 9
	'S'            reduce using rule 9
	'U'            reduce using rule 9
	']'            reduce using rule 9
	'ind'          reduce using rule 9
	L_Ident        reduce using rule 9
	%eof           reduce using rule 9


State 29

	Term -> Term1 '->' . Term                           (rule 6)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 32
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 30

	Toplevel -> Ident ':' . Term '=' Term               (rule 18)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 31
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 31

	Toplevel -> Ident ':' Term . '=' Term               (rule 18)

	'='            shift, and enter state 39


State 32

	Term -> Term1 '->' Term .                           (rule 6)

	')'            reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	%eof           reduce using rule 6


State 33

	Term3 -> '(' Term ')' .                             (rule 17)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'->'           reduce using rule 17
	'0'            reduce using rule 17
	';'            reduce using rule 17
	'='            reduce using rule 17
	'N'            reduce using rule 17
	'S'            reduce using rule 17
	'U'            reduce using rule 17
	']'            reduce using rule 17
	'ind'          reduce using rule 17
	L_Ident        reduce using rule 17
	%eof           reduce using rule 17


State 34

	Term -> '[' Ident ':' . Term ']' Term               (rule 7)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 38
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 35

	Term2 -> 'ind' Term2 Term2 . Term2 Term2            (rule 16)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term2          goto state 37
	Term3          goto state 9

State 36

	ListToplevel -> Toplevel ';' ListToplevel .         (rule 21)

	%eof           reduce using rule 21


State 37

	Term2 -> 'ind' Term2 Term2 Term2 . Term2            (rule 16)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term2          goto state 42
	Term3          goto state 9

State 38

	Term -> '[' Ident ':' Term . ']' Term               (rule 7)

	']'            shift, and enter state 41


State 39

	Toplevel -> Ident ':' Term '=' . Term               (rule 18)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 40
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 40

	Toplevel -> Ident ':' Term '=' Term .               (rule 18)

	';'            reduce using rule 18
	%eof           reduce using rule 18


State 41

	Term -> '[' Ident ':' Term ']' . Term               (rule 7)

	'('            shift, and enter state 11
	'0'            shift, and enter state 12
	'N'            shift, and enter state 13
	'S'            shift, and enter state 14
	'U'            shift, and enter state 15
	'['            shift, and enter state 16
	'ind'          shift, and enter state 17
	L_Ident        shift, and enter state 4

	Ident          goto state 18
	Term           goto state 43
	Term1          goto state 7
	Term2          goto state 8
	Term3          goto state 9

State 42

	Term2 -> 'ind' Term2 Term2 Term2 Term2 .            (rule 16)

	'('            reduce using rule 16
	')'            reduce using rule 16
	'->'           reduce using rule 16
	'0'            reduce using rule 16
	';'            reduce using rule 16
	'='            reduce using rule 16
	'N'            reduce using rule 16
	'S'            reduce using rule 16
	'U'            reduce using rule 16
	']'            reduce using rule 16
	'ind'          reduce using rule 16
	L_Ident        reduce using rule 16
	%eof           reduce using rule 16


State 43

	Term -> '[' Ident ':' Term ']' Term .               (rule 7)

	')'            reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	%eof           reduce using rule 7


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 22
Number of terminals: 14
Number of non-terminals: 11
Number of states: 44
