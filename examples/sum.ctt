idN : N -> U = [x:N]N ;

zero : N = ind idN Z ([n:N][m:N]Z) Z ;

succ : N -> N = [n : N] ind idN (S Z) ([n':N][m:N]S m) n ;

plus : N -> N -> N = [m : N][n : N] ind idN m ([n':N][mPlusn:N]S mPlusn) n ;


curry : [A:U][B:U][C:U] ((A * B) -> C) -> A -> B -> C =
    [A:U][B:U][C:U][f : (A * B) -> C][a:A][b:B] f (a,b) ;
uncurry : [A:U][B:U][C:U] (A -> B -> C) -> (A * B) -> C = 
    [A:U][B:U][C:U][g : A -> B -> C][p: A * B] g (p.1) (p.2) ;

prod : U -> U -> U = [A:U][B:U][x:N] ind ([y:N]U) A ([n:N][p:U]B) x ;
pi1 : [A:U][B:U] prod A B -> A = [A:U][B:U][p : prod A B] p Z ;
pi2 : [A:U][B:U] prod A B -> B = [A:U][B:U][p : prod A B] p (S Z) ;
couple : [A:U][B:U] A -> B -> prod A B = [A:U][B:U][a:A][b:B][x:N] ind ([y:N]ind ([z:N]U) A ([n:N][p:U]B) y) a ([n:N][p:ind ([w:N]U) A ([m:N][q:U]B) n] b) x;

NpN : U = prod N N ;
couple13 : NpN = couple N N (S Z) (S (S (S Z))) ;

prod2sum : [A:U][B:U] prod A B -> A * B = [A:U][B:U][p : prod A B]
    (pi1 A B p,pi2 A B p) ;

sum2prod : [A:U][B:U] (A * B) -> prod A B = [A:U][B:U]
    uncurry A B (prod A B) (couple A B) ;

couple13' : N * N = prod2sum N N couple13 ;

couple' : [A:U][B:U] (A * B) -> prod A B = [A:U][B:U]
    uncurry A B (prod A B) (couple A B);

couple'' : [AB:U * U] AB.1 -> AB.2 -> prod AB.1 AB.2 = [AB:U * U]
    [x : AB.1][y : AB.2] couple AB.1 AB.2 x y ;

couple13'' : NpN = couple'' ((N,N)) couple13'.1 couple13'.2 ;


-------------

--These need eta-conversion

AC : [A:U][B:U][C:A -> B -> U]([x:A]<y:B> C x y) -> <f:A -> B>[x:A] C x (f x) = 
    [A:U][B:U][C:A -> B -> U][h : [x:A]<y:B> C x y]
        (([x:A](h x).1),([x:A](h x).2)) ;

indSigma : [A:U][B:A->U][C:(<x:A>B x)->U]([a:A][b:B a]C (a,b)) -> [p:<x:A>B x] C p =
    [A:U][B:A->U][C:(<x:A>B x)->U][h:[a:A][b:B a]C((a,b))][p:<x:A>B x]
        h p.1 p.2;

recSigma : [A:U][B:U][C:A*B->U]([a:A][b:B]C (a,b)) -> [p:A*B] C p =
    [A:U][B:U][C:A*B->U][h:[a:A][b:B]C (a,b)] indSigma A (A->B) C h ;


-------------

i : I ;

rs : [i = 0 -> (S Z, S (S Z)) | i = 1 -> couple13'] (N*N) ;
