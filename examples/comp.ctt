Path : [A : U] A -> A -> U =
    [A : U][a0 : A][a1 : A][i : I] [(i = 0) -> a0 | (i = 1) -> a1] A ;

refl : [A : U][a : A] Path A a a = [A : U][a : A][i : I] a ;

concat : [A:U][a,b,c:A] Path A a b -> Path A b c -> Path A a c =
    [A:U][a,b,c:A][p:Path A a b][q:Path A b c]
        [i:I] comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> a | i = 1 -> q j]) (p i) 1;

concatFill : [A:U][a,b,c:A][p:Path A a b][q:Path A b c][i:I][j:I][j = 0 -> p i | i = 0 -> a | i = 1 -> q j]A =
    [A:U][a,b,c:A][p:Path A a b][q:Path A b c]
        [i:I] comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> a | i = 1 -> q j]) (p i) ;

inv : [A:U][a,b:A] Path A a b -> Path A b a = [A:U][a,b:A][p:Path A a b]
    [i:I] (comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> p j | i = 1 -> a]) a 1) ;

invFill : [A:U][a,b:A][p:Path A a b][i:I][j:I][j = 0 -> a | i = 0 -> p j | i = 1 -> a]A = [A:U][a,b:A][p:Path A a b]
    [i:I] comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> p j | i = 1 -> a]) a ;

--invFill' : [A:U][a,b:A][p:Path A a b][i:I] Path A a (inv A a b p i) = [A:U][a,b:A][p:Path A a b]
--    [i:I] comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> p j | i = 1 -> a]) a ;


invFillrc : [A:U][a,b:A][p:Path A a b][k:I][i:I][k = 0 -> p i | k = 1 -> a | i = 0 -> a]A = [A:U][a,b:A][p:Path A a b]
    [k:I] comp ([ii:I]A) (k = 0 \/ k = 1) 0 ([i:I][k = 0 -> p i | k = 1 -> a]) a ;


rc : [A:U][a,b:A][p:Path A a b] Path (Path A a a)
    (concat A a b a p (inv A a b p)) (refl A a) =
    [A:U][a,b:A][p:Path A a b][j,i:I] comp (I -> A) (i = 0 \/ i = 1 \/ j = 0 \/ j = 1) 0
        ([k : I][i = 0 -> a |
                 i = 1 -> inv A a b p k |
                 j = 0 -> concatFill A a b a p (inv A a b p) i k |
                 j = 1 -> invFillrc A a b p k i]) (p i) 1 ;


xx : [A:U][a,b:A][p:Path A a b][i:I] Path A a (inv A a b p i) ;

A : U ;
a : A ;
b : A ;
--c : A ;
p : Path A a b ;
--q : Path A b c ;

{-

fill : [i,j:I][j = 0 -> p i | i = 0 -> a | i = 1 -> q j]A =
    [i:I] comp ([ii:I]A) (i = 0 \/ i = 1) 0 ([j:I][i = 0 -> a | i = 1 -> q j]) (p i);

-- fill 0 : [j:I][True -> a]A = [j:I]a ;
-- fill 1 : [j:I][True -> q j]A = [j:I] q j = q ;
-- [i:I] fill i 0 : [i:I][True -> p i]A = p ; 
-- [i:I] fill i 1 : [i:I][i = 0 -> a | i = 1 -> c]A ;

comppq : Path A a c = [i:I] fill i 1;

a0 : N ;

compTest  : I -> N = comp (I -> N) (i = 0 /\ i = 1) 0 (I -> []) a0 ;
--compTest' : [i:I][i = 0 -> a0]N = comp (I -> N) 0 [] a0 ;


ap : [B:U][C:U][f:B->C][b1:B][b2:B] Path B b1 b2 -> Path C (f b1) (f b2) = 
    [B:U][C:U][f:B->C][b1:B][b2:B][pB : Path B b1 b2][i:I] f (pB i) ;

-}

{-
y :  [i,j:I][i = 0 /\ j = 0 \/ i = 1 /\ j = j /\ j = i]N ;
yy : [i,j:I][i = 0 /\ j = 0 -> S Z | i = 1 /\ j = j /\ j = i -> S (S Z)]N ;
y' : [i,j:I][(i = 1 /\ j = j /\ j = i)]N ;
-}

{-
B : U ;
bV : B ;
f : [i:I]B -> [i = 0 -> a | i = 1 -> b]A ;
pred : ([i:I]B -> [i = 0 \/ i = 1]A) -> U ;
predf : pred f ;

fTest' : [i:I][i = 0 -> f1 i bV]A = [i : I] f2 i bV ;
-}

{-
transport' : [B : U][P : B -> U][x : B][y : B][pB : Path B x y][u : P x][i:I][i = 0 -> u]P (pB i) = 
    [B : U][P : B -> U][x : B][y : B][pB : Path B x y][u : P x]
        comp ([i : I]P (pB i)) (i = 0 /\ i = 1) 0 (I -> []) u ;

transport : [B : U][P : B -> U][x : B][y : B][pB : Path B x y] P x -> P y = 
    [B : U][P : B -> U][x : B][y : B][pB : Path B x y][u : P x]
        comp ([i : I]P (pB i)) (i = 0 /\ i = 1) 0 (I -> []) u 1;
-}

